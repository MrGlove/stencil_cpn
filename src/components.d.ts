/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GlsButton {
        "buttonRadius": string;
        "buttonText": string;
        "buttonType": string;
    }
    interface GlsLink {
        "linkText": string;
        "linkType": string;
    }
    interface GlsRadio {
        "itemChecked": boolean;
        "itemId": string;
        "itemText": string;
        "radioColor": string;
        "radioName": string;
        "radioStyle": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface TestCpnfirst {
        "ttext": string;
    }
}
declare global {
    interface HTMLGlsButtonElement extends Components.GlsButton, HTMLStencilElement {
    }
    var HTMLGlsButtonElement: {
        prototype: HTMLGlsButtonElement;
        new (): HTMLGlsButtonElement;
    };
    interface HTMLGlsLinkElement extends Components.GlsLink, HTMLStencilElement {
    }
    var HTMLGlsLinkElement: {
        prototype: HTMLGlsLinkElement;
        new (): HTMLGlsLinkElement;
    };
    interface HTMLGlsRadioElement extends Components.GlsRadio, HTMLStencilElement {
    }
    var HTMLGlsRadioElement: {
        prototype: HTMLGlsRadioElement;
        new (): HTMLGlsRadioElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLTestCpnfirstElement extends Components.TestCpnfirst, HTMLStencilElement {
    }
    var HTMLTestCpnfirstElement: {
        prototype: HTMLTestCpnfirstElement;
        new (): HTMLTestCpnfirstElement;
    };
    interface HTMLElementTagNameMap {
        "gls-button": HTMLGlsButtonElement;
        "gls-link": HTMLGlsLinkElement;
        "gls-radio": HTMLGlsRadioElement;
        "my-component": HTMLMyComponentElement;
        "test-cpnfirst": HTMLTestCpnfirstElement;
    }
}
declare namespace LocalJSX {
    interface GlsButton {
        "buttonRadius"?: string;
        "buttonText"?: string;
        "buttonType"?: string;
    }
    interface GlsLink {
        "linkText"?: string;
        "linkType"?: string;
    }
    interface GlsRadio {
        "itemChecked"?: boolean;
        "itemId"?: string;
        "itemText"?: string;
        "radioColor"?: string;
        "radioName"?: string;
        "radioStyle"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface TestCpnfirst {
        "ttext"?: string;
    }
    interface IntrinsicElements {
        "gls-button": GlsButton;
        "gls-link": GlsLink;
        "gls-radio": GlsRadio;
        "my-component": MyComponent;
        "test-cpnfirst": TestCpnfirst;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gls-button": LocalJSX.GlsButton & JSXBase.HTMLAttributes<HTMLGlsButtonElement>;
            "gls-link": LocalJSX.GlsLink & JSXBase.HTMLAttributes<HTMLGlsLinkElement>;
            "gls-radio": LocalJSX.GlsRadio & JSXBase.HTMLAttributes<HTMLGlsRadioElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "test-cpnfirst": LocalJSX.TestCpnfirst & JSXBase.HTMLAttributes<HTMLTestCpnfirstElement>;
        }
    }
}
